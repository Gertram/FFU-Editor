<mah:MetroWindow
    x:Class="FFUEditor.MainWindow"
    xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:FFUEditor"
    WindowStartupLocation="CenterScreen"
    GlowBrush="{DynamicResource MahApps.Brushes.Accent}"
    mc:Ignorable="d"
    AllowsTransparency="True"
    Loaded="MetroWindow_Loaded"
    AllowDrop="True"
    PreviewDragEnter="MainForm_DragEnter"
    PreviewDrop="MainForm_DragDrop"
    PreviewKeyDown="MetroWindow_PreviewKeyDown"
    DataContext="{Binding RelativeSource={RelativeSource Self}}"
    Title="MainWindow" Height="600" Width="1000">
    <mah:MetroWindow.CommandBindings>
        <CommandBinding Command="Open" x:Name="OpenCommandBinding" Executed="OpenCommandBinding_Executed"/>
        <CommandBinding Command="Save" x:Name="SaveCommandBinding" Executed="SaveCommandBinding_Executed" CanExecute="ExportCommandBinding_CanExecute"/>
        <CommandBinding Command="SaveAs" x:Name="SaveAsCommandBinding" Executed="SaveAsCommandBinding_Executed" CanExecute="ExportCommandBinding_CanExecute"/>
        <CommandBinding
            Command="{x:Static local:WindowCommands.ExportCommand}" x:Name="ExportCommandBinding"
            Executed="ExportCommandBinding_Executed"
            CanExecute="ExportCommandBinding_CanExecute"/>
        <CommandBinding
            Command="{x:Static local:WindowCommands.ImportCommand}" x:Name="ImportCommandBinding"
            Executed="ImportCommandBinding_Executed"/>
        <CommandBinding
            Command="{x:Static local:WindowCommands.ShowCharacterCommand}" 
            x:Name="ShowCharacterCommandBinding"
            Executed="ShowCharacterCommandBinding_Executed"
            CanExecute="ExportCommandBinding_CanExecute"/>
        <CommandBinding
            Command="{x:Static local:WindowCommands.ShowCharacterByCodeCommand}" 
            x:Name="ShowCharacterByCodeCommandBinding"
            Executed="ShowCharacterByCodeCommandBinding_Executed"
            CanExecute="ExportCommandBinding_CanExecute"/>
        <CommandBinding
            Command="{x:Static local:WindowCommands.ShowCharacterByIndexCommand}" 
            x:Name="ShowCharacterByIndexCommandBinding"
            Executed="ShowCharacterByIndexCommandBinding_Executed"
            CanExecute="ExportCommandBinding_CanExecute"/>
        <CommandBinding
            Command="{x:Static local:WindowCommands.AddCharacterCommand}" 
            x:Name="AddCharacterCommandBinding"
            Executed="AddCharacterCommandBinding_Executed"
            CanExecute="ExportCommandBinding_CanExecute"/>
        <CommandBinding
            Command="{x:Static local:WindowCommands.RedactCharacterCommand}"
            x:Name="RedactCharacterCommandBinding"
            Executed="RedactCharacterCommandBinding_Executed"
            CanExecute="ExportCommandBinding_CanExecute"/>
        <CommandBinding
            Command="{x:Static local:WindowCommands.RemoveCharacterCommand}"
            x:Name="RemoveCharacterCommandBinding"
            Executed="RemoveCharacterCommandBinding_Executed"
            CanExecute="ExportCommandBinding_CanExecute"/>
        <CommandBinding
            Command="{x:Static local:WindowCommands.FontSettingsCommand}"
            x:Name="FontSettingsCharacterCommandBinding"
            Executed="FontSettingsCharacterCommandBinding_Executed"
            CanExecute="ExportCommandBinding_CanExecute"/>
        <CommandBinding
            Command="{x:Static local:WindowCommands.CharactersListCommand}"
            x:Name="CharactersListCharacterCommandBinding"
            Executed="CharactersListCharacterCommandBinding_Executed"
            CanExecute="ExportCommandBinding_CanExecute"/>
        <CommandBinding
            Command="{x:Static local:WindowCommands.ToolsCommand}"
            x:Name="ToolsCommandBinding"
            Executed="ToolsCommandBinding_Executed"
            CanExecute="ExportCommandBinding_CanExecute"/>
        <CommandBinding
            Command="{x:Static local:WindowCommands.ModifiableCharactersCommand}"
            x:Name="ModifiableCharactersCommandBinding"
            Executed="ModifiableCharactersCommandBinding_Executed"
            CanExecute="ExportCommandBinding_CanExecute"/>
    </mah:MetroWindow.CommandBindings>
    <mah:MetroWindow.InputBindings>
        <KeyBinding Gesture="Ctrl+O" Command="Open"/>
        <KeyBinding Gesture="Ctrl+S" Command="Save"/>
        <KeyBinding Gesture="Ctrl+Shift+S" Command="SaveAs"/>
    </mah:MetroWindow.InputBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Menu IsMainMenu="True" Grid.Row="0">
            <MenuItem Header="{DynamicResource m_File_Header}">
                <MenuItem Header="{DynamicResource m_Open_Header}" Command="Open"/>
                <MenuItem Header="{DynamicResource m_Save_Header}" Command="Save"/>
                <MenuItem Header="{DynamicResource m_File_SaveAs_MenuItem}" Command="SaveAs"/>
                <MenuItem Header="{DynamicResource m_File_Export_MenuItem}">
                    <MenuItem 
                        Header="{DynamicResource m_File_Export_PNG_MenuItem}" 
                        Command="{x:Static local:WindowCommands.ExportCommand}" 
                        CommandParameter="{x:Static local:ExportFormats.PNG}"/>
                    <MenuItem 
                        Header="{DynamicResource m_File_Export_XML_MenuItem}" 
                        Command="{x:Static local:WindowCommands.ExportCommand}" 
                        CommandParameter="{x:Static local:ExportFormats.XML}"/>
                </MenuItem>
                <MenuItem Header="{DynamicResource m_File_Import_MenuItem}">
                    <MenuItem 
                        Header="{DynamicResource m_File_Import_XML_MenuItem}" 
                        Command="{x:Static local:WindowCommands.ImportCommand}" 
                        CommandParameter="{x:Static local:ImportFormats.XML}"/>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="{DynamicResource m_Edit_Header}">
                <MenuItem 
                    Header="{DynamicResource m_Add_Header}" 
                    x:Name="Edit_Add_MenuItem" 
                    Command="{x:Static local:WindowCommands.AddCharacterCommand}"/>
                <MenuItem 
                    Header="{DynamicResource m_Redact_Header}" 
                    x:Name="Edit_Redact_MenuItem" 
                    Command="{x:Static local:WindowCommands.RedactCharacterCommand}"/>
                <MenuItem 
                    Header="{DynamicResource m_Remove_Header}" 
                    x:Name="Edit_Remove_MenuItem" 
                    Command="{x:Static local:WindowCommands.RemoveCharacterCommand}"/>
            </MenuItem>
            <MenuItem Header="{DynamicResource m_Tools_MenuItem}" VerticalAlignment="Center">
                <MenuItem Header="{DynamicResource m_Tools_ImportPadding_MenuItem}" x:Name="ImportPaddingMenuItem" Command="{x:Static local:WindowCommands.ToolsCommand}" CommandParameter="ImportPadding"/>
                <MenuItem Header="{DynamicResource m_Tools_ExpandPadding_MenuItem}" x:Name="ExpandPaddingMenuItem" Command="{x:Static local:WindowCommands.ToolsCommand}" CommandParameter="ExpandPadding"/>
                <MenuItem Header="{DynamicResource m_Tools_SetPadding_MenuItem}" x:Name="SetPaddingMenuItem" Command="{x:Static local:WindowCommands.ToolsCommand}" CommandParameter="SetPadding"/>
                <MenuItem Header="{DynamicResource m_Tools_AddStroke_MenuItem}" x:Name="AddStrokeMenuItem" Command="{x:Static local:WindowCommands.ToolsCommand}" CommandParameter="AddStroke"/>
                <MenuItem Header="{DynamicResource m_Tools_GenerateFont_MenuItem}" x:Name="GenerateFontMenuItem" Command="{x:Static local:WindowCommands.ToolsCommand}" CommandParameter="GenerateFont"/>
                <MenuItem Header="{DynamicResource m_Tools_CopyRange_MenuItem}" x:Name="CopyRangeMenuItem" Command="{x:Static local:WindowCommands.ToolsCommand}" CommandParameter="CopyRange"/>
                <MenuItem Header="{DynamicResource m_Tools_MoveRange_MenuItem}" x:Name="MoveRangeMenuItem" Command="{x:Static local:WindowCommands.ToolsCommand}" CommandParameter="MoveRange"/>
            </MenuItem>
            <MenuItem Header="{DynamicResource m_FontSettings_MenuItem}" Command="{x:Static local:WindowCommands.FontSettingsCommand}"/>
            <MenuItem Header="{DynamicResource m_CharactersList_MenuItem}" Command="{x:Static local:WindowCommands.CharactersListCommand}"/>
            <MenuItem Header="{DynamicResource m_Settings_MenuItem}">
                <MenuItem Header="{DynamicResource m_Language_MenuItem}" x:Name="menuLanguage"/>
            </MenuItem>
        </Menu>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <GroupBox Grid.Column="0" Header="{DynamicResource m_CurrentSym_Header}" Margin="5">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <TextBlock 
                            Grid.Row="0" Padding="10,5"
                            Text="{DynamicResource m_Miniature_Header}"/>
                        <Grid 
                            Grid.Row="1" 
                            Background="Black" x:Name="MiniatureWrap" Margin="10"
                            Height="{Binding Path=ActualWidth, RelativeSource={RelativeSource Self}}">
                            <WrapPanel>
                                <WrapPanel.Background>
                                    <ImageBrush Stretch="Uniform" x:Name="Miniature"/>
                                </WrapPanel.Background>
                            </WrapPanel>
                        </Grid>
                    </Grid>
                    <Grid Grid.Row="1" Margin="5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label 
                            Grid.Row="0" Grid.Column="0" 
                            VerticalAlignment="Center"
                            Content="{DynamicResource m_CurrentSym_HexCode_Label}"/>
                        <TextBox
                            Grid.Row="0" Grid.Column="1" Margin="2.5"
                            x:Name="mtxtCharacterCode" 
                            VerticalAlignment="Center" 
                            TextChanged="MtxtCharacterCode_TextChanged">
                            <TextBox.InputBindings>
                                <KeyBinding Key="Return" Command="{x:Static local:WindowCommands.ShowCharacterByCodeCommand}"/>
                            </TextBox.InputBindings>
                        </TextBox>
                        <Button 
                            Grid.Row="0" Grid.Column="2" Margin="10,0"
                            Content="{DynamicResource m_Show_Header}" 
                            Command="{x:Static local:WindowCommands.ShowCharacterByCodeCommand}"
                            VerticalAlignment="Center"/>
                        <Label 
                            Grid.Row="1" Grid.Column="0" 
                            VerticalAlignment="Center"
                            Content="{DynamicResource m_CurrentSym_Character_Label}"/>
                        <TextBox
                            Grid.Row="1" Grid.Column="1" Margin="2.5"
                            MaxLength="1"
                            x:Name="mtxtCharacter" 
                            VerticalAlignment="Center" 
                            TextChanged="MtxtCharacter_TextChanged">
                            <TextBox.InputBindings>
                                <KeyBinding Key="Return" Command="{x:Static local:WindowCommands.ShowCharacterCommand}"/>
                            </TextBox.InputBindings>
                        </TextBox>
                        <Button 
                            Grid.Row="1" Grid.Column="2" Margin="10,0"
                            Content="{DynamicResource m_Show_Header}" 
                            Command="{x:Static local:WindowCommands.ShowCharacterCommand}"
                            VerticalAlignment="Center"/>
                        <Label 
                            Grid.Row="2" Grid.Column="0" 
                            VerticalAlignment="Center"
                            Content="{DynamicResource m_CurrentSym_CharacterIndex_Label}"/>
                        <TextBox
                            Grid.Row="2" Grid.Column="1" Margin="2.5"
                            x:Name="mtxtCharacterIndex" 
                            VerticalAlignment="Center" 
                            TextChanged="MtxtCharacter_TextChanged">
                            <TextBox.InputBindings>
                                <KeyBinding Key="Return" Command="{x:Static local:WindowCommands.ShowCharacterByIndexCommand}"/>
                            </TextBox.InputBindings>
                        </TextBox>
                        <Button 
                            Grid.Row="2" Grid.Column="2" Margin="10,0"
                            Content="{DynamicResource m_Show_Header}" 
                            Command="{x:Static local:WindowCommands.ShowCharacterByIndexCommand}"
                            VerticalAlignment="Center"/>
                        <Label 
                                Grid.Row="3" Grid.Column="0"
                                Content="{DynamicResource m_CurrentSym_Header_Label}" 
                                ContentStringFormat="{}{0} :"
                                VerticalAlignment="Center"/>
                        <TextBlock 
                                Grid.Row="3" Grid.Column="1" 
                                x:Name="CharacterHeaderTextBox" 
                                VerticalAlignment="Center"/>
                        <Label 
                                Grid.Row="4" Grid.Column="0" 
                                Content="{DynamicResource m_CurrentSym_Body_Label}" 
                                ContentStringFormat="{}{0} :"
                                VerticalAlignment="Center"/>
                        <TextBlock 
                                Grid.Row="4" Grid.Column="1"
                                x:Name="CharacterBodyTextBox" 
                                VerticalAlignment="Center"/>
                    </Grid>
                </Grid>
            </GroupBox>
            <GroupBox
                Grid.Column="1" Margin="5" 
                Header="{DynamicResource m_TemplateImage_Header}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                            <Label 
                                    Content="{DynamicResource m_Palette_Label}" 
                                    MinWidth="100" VerticalAlignment="Center" Margin="10,5"/>
                            <ComboBox 
                                    x:Name="PaletteComboBox" Margin="10,5" MinWidth="100" 
                                    SelectionChanged="PaletteComboBox_SelectionChanged"
                                    VerticalAlignment="Center"/>
                            <Label 
                                    Content="{DynamicResource m_Background_Label}" MinWidth="100" 
                                    VerticalAlignment="Center" Margin="10,5"/>
                            <ComboBox 
                                    x:Name="BackgroundComboBox" Margin="10,5" MinWidth="100" 
                                    SelectionChanged="BackgroundComboBox_SelectionChanged"
                                    VerticalAlignment="Center">
                                <ComboBoxItem Content="{DynamicResource m_Black_Color}"/>
                                <ComboBoxItem Content="{DynamicResource m_White_Color}"/>
                            </ComboBox>
                            <ComboBox 
                                IsEnabled="False"
                                    x:Name="EncodingComboBox" Margin="10,5" MinWidth="100" 
                                    SelectionChanged="EncodingComboBox_SelectionChanged"
                                    VerticalAlignment="Center">
                                <ComboBoxItem Content="SHIFT-JIS"/>
                                <ComboBoxItem Content="UTF-8"/>
                            </ComboBox>
                        </StackPanel>
                        <Button 
                                Content="{DynamicResource m_ModifiebleCharacters_Label}" Padding="10,5" 
                                Command="{x:Static local:WindowCommands.ModifiableCharactersCommand}"
                                VerticalAlignment="Center" HorizontalAlignment="Right"/>
                    </Grid>
                    <WrapPanel Grid.Row="1" x:Name="TemplateImageWrap">
                        <Image x:Name="TemplateImage" />
                    </WrapPanel>
                </Grid>
            </GroupBox>
        </Grid>
        <StatusBar Grid.Row="2">
            <StatusBarItem x:Name="StatusBar1"/>
        </StatusBar>
    </Grid>
</mah:MetroWindow>
