<mah:MetroWindow
    x:Class="FFUEditor.AddCharacterWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:FFUEditor"
    PreviewKeyDown="Window_PreviewKeyDown"
    WindowStartupLocation="CenterScreen"
    x:Name="Root"
    DataContext="{Binding RelativeSource={RelativeSource Self}}"
    mc:Ignorable="d"
    Title="{DynamicResource m_AddCharacterWindow_Title}" Height="600" Width="1200">
    <mah:MetroWindow.CommandBindings>
        <CommandBinding
            x:Name="SwitchCharacterCommandBinding"
            Command="{x:Static local:AddCharacterWindow.SwitchCharacterCommand}"
            Executed="SwitchCharacterCommandBinding_Executed"/>
    </mah:MetroWindow.CommandBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Menu>
            <MenuItem Header="Export" x:Name="ExportMenuItem" Click="ExportMenuItem_Click"/>
            <MenuItem Header="Import" x:Name="ImportMenuItem" Click="ImportMenuItem_Click"/>
        </Menu>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <StackPanel Orientation="Horizontal" Grid.Row="0">
                    <StackPanel Orientation="Horizontal">
                        <Button
                        Content="{DynamicResource m_Prev_Header}" Margin="10,5" Padding="10,5"
                        Command="{x:Static local:AddCharacterWindow.SwitchCharacterCommand}" 
                        CommandParameter="Prev"
                        VerticalAlignment="Top"/>
                        <Button 
                        Content="{DynamicResource m_Next_Header}" Margin="10,5" Padding="10,5"
                        Command="{x:Static local:AddCharacterWindow.SwitchCharacterCommand}" 
                        CommandParameter="Next"
                        VerticalAlignment="Top"/>
                    </StackPanel>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="100"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Label 
                        Grid.Row="0" Grid.Column="0" Margin="10,5"
                        Content="{DynamicResource m_Palette_Label}" VerticalAlignment="Center"/>
                        <ComboBox
                        Grid.Row="0" Grid.Column="1" Margin="10,5" 
                        x:Name="PaletteComboBox"
                        SelectionChanged="PaletteComboBox_SelectionChanged"
                        VerticalAlignment="Center"/>
                        <Label Grid.Row="1" Grid.Column="0" Margin="10,5"
                           Content="{DynamicResource m_Background_Label}" VerticalAlignment="Center"/>
                        <ComboBox 
                        Grid.Row="1" Grid.Column="1" Margin="10,5" 
                        x:Name="BackgroundComboBox"
                        SelectedIndex="0"
                        SelectionChanged="BackgoundComboBox_SelectionChanged"
                        VerticalAlignment="Center">
                            <ComboBoxItem Content="{DynamicResource m_Black_Color}"/>
                            <ComboBoxItem Content="{DynamicResource m_White_Color}"/>
                        </ComboBox>
                    </Grid>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="100"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Label 
                        Grid.Row="0" Grid.Column="0" Margin="10,5" 
                        Content="{DynamicResource m_CurrentColor_Header}" VerticalAlignment="Center"/>
                        <ComboBox 
                        Grid.Row="0" Grid.Column="1" Margin="10,5" x:Name="CurrentColorComboBox"
                        SelectedIndex="0"
                        SelectionChanged="CurrentColorComboBox_SelectionChanged"
                        VerticalAlignment="Center"/>
                        <WrapPanel
                        Grid.Row="0" Grid.Column="2" Margin="10,5" 
                        x:Name="CurrentColorWrap"
                        Width="20" Height="20" VerticalAlignment="Center" Background="Black"/>
                        <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource m_Scale_Header}" Margin="10,5" VerticalAlignment="Center"/>
                        <ComboBox 
                        Grid.Row="1" Grid.Column="1" Margin="10,5" x:Name="ScaleComboBox"
                        SelectionChanged="ScaleComboBox_SelectionChanged"
                        SelectedIndex="3"
                        VerticalAlignment="Center">
                            <ComboBoxItem Content="3"/>
                            <ComboBoxItem Content="6"/>
                            <ComboBoxItem Content="9"/>
                            <ComboBoxItem Content="12"/>
                        </ComboBox>
                    </Grid>
                    <GroupBox Header="Skew">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Row="0" Grid.Column="0" Content="XAngle" VerticalAlignment="Center"/>
                            <TextBox Grid.Row="0" Grid.Column="1" Width="80" Margin="5" x:Name="SkewXTextBox"/>
                            <Label Grid.Row="1" Grid.Column="0" Content="YAngle" VerticalAlignment="Center"/>
                            <TextBox Grid.Row="1" Grid.Column="1" Width="80" Margin="5" x:Name="SkewYTextBox"/>
                            <Button Grid.Row="1" Grid.Column="2" Content="Set" Padding="20,5" Margin="5" x:Name="SkewSetTextBox" Click="SkewSetTextBox_Click"/>
                        </Grid>
                    </GroupBox>
                </StackPanel>
                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <GroupBox Header="{DynamicResource m_CurrentSym_Header}">
                        <Grid Margin="5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition MinWidth="80"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Label 
                            Grid.Row="0" Grid.Column="0" 
                            Content="{DynamicResource m_CurrentSym_HexCode_Label}"
                            VerticalContentAlignment="Center"/>
                            <TextBox
                            Grid.Row="0" Grid.Column="1"
                            x:Name="CurrentCharacterCodeTextBox"
                            Text="{Binding CurrentCharacterCode,Mode=OneWay}"
                            PreviewKeyDown="CurrentCharacterCodeTextBox_PreviewKeyDown"
                            Margin="10,2.5"
                            VerticalAlignment="Center"/>
                            <Label 
                            Grid.Row="1" Grid.Column="0" 
                            Content="{DynamicResource m_CurrentSym_HexCode_Label}"
                            VerticalContentAlignment="Center"/>
                            <TextBox
                            Grid.Row="1" Grid.Column="1"
                            x:Name="CurrentCharacterTextBox"
                            Text="{Binding CurrentCharacter,Mode=OneWay}"
                            PreviewKeyDown="CurrentCharacterextBox_PreviewKeyDown"
                            Margin="10,2.5"
                            VerticalAlignment="Center"/>
                            <Label 
                            Grid.Row="2" Grid.Column="0" 
                            Content="{DynamicResource m_CurrentSym_CharacterIndex_Label}"
                            VerticalContentAlignment="Center"/>
                            <TextBox
                            Grid.Row="2" Grid.Column="1"
                            x:Name="CurrentCharacterIndexTextBox"
                            Text="{Binding CurrentCharacterIndex,Mode=OneWay}"
                            PreviewKeyDown="CurrentCharacterIndexTextBox_PreviewKeyDown"
                            Margin="10,2.5"
                            VerticalAlignment="Center"/>
                            <Label
                            Grid.Row="3" Grid.Column="0"
                            Content="{DynamicResource m_FontInfo_SymWidth_Label}"
                            VerticalContentAlignment="Center"/>
                            <TextBox
                            Grid.Row="3" Grid.Column="1"
                            x:Name="txtWidth" Margin="10,2.5"
                            PreviewKeyDown="TxtWidth_KeyDown"
                            Text="{Binding CurrentSym.Width,Mode=OneWay}"
                            VerticalAlignment="Center"/>
                            <Label
                            Grid.Row="4" Grid.Column="0"
                            Content="{DynamicResource m_FontInfo_SymHeight_Label}"
                            VerticalContentAlignment="Center"/>
                            <TextBox
                            Grid.Row="4" Grid.Column="1"
                            x:Name="txtHeight" Margin="10,2.5" 
                            Text="{Binding CurrentSym.Height,Mode=OneWay}"
                            PreviewKeyDown="TxtWidth_KeyDown"
                            VerticalAlignment="Center"/>
                            <Label 
                            Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="2"
                            Content="{DynamicResource m_Miniature_Header}"
                            HorizontalContentAlignment="Center"
                            VerticalAlignment="Center"/>
                            <Grid
                            Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="2"
                            x:Name="MiniatureWrap"
                            Background="{Binding BackgroundColor}"
                            Height="{Binding Path=ActualWidth, RelativeSource={RelativeSource Self}}">
                                <WrapPanel>
                                    <WrapPanel.Background>
                                        <ImageBrush x:Name="Miniature" Stretch="Uniform"/>
                                    </WrapPanel.Background>
                                </WrapPanel>
                            </Grid>
                        </Grid>
                    </GroupBox>
                    <Grid Grid.Column="1">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <TextBox 
                        Grid.Row="0" 
                        x:Name="TextViewTextBox"
                        AcceptsReturn="True" TextWrapping="WrapWithOverflow"/>
                        <Grid Grid.Row="1">
                            <Button 
                            x:Name="UpdateImageButton"
                            Content="{DynamicResource m_UpdateImage_Header}" 
                            Click="UpdateImageButton_Click"  
                            Margin="10,5" Padding="10,5" 
                            HorizontalAlignment="Left"/>
                            <Button 
                            x:Name="SaveButton"
                            Click="SaveButton_Click"
                            Content="{DynamicResource m_Save_Header}" 
                            Margin="10,5" Padding="10,5"  
                            HorizontalAlignment="Right"/>
                        </Grid>
                    </Grid>
                    <Canvas 
                    Grid.Column="2" 
                    x:Name="BigIconWrap" 
                    Background="{Binding BackgroundColor}">
                        <Image
                        Width="{Binding Path=ActualWidth, ElementName=BigIconWrap}"
                        Height="{Binding Path=ActualHeight, ElementName=BigIconWrap}" 
                        x:Name="BigIconBack" Stretch="Uniform"/>
                        <Image 
                        Stretch="Uniform"
                        Width="{Binding Path=ActualWidth, ElementName=BigIconWrap}"
                        Height="{Binding Path=ActualHeight, ElementName=BigIconWrap}"
                        x:Name="BigIconMask" 
                        MouseDown="BigIcon_MouseDown"
                        MouseUp="BigIcon_MouseUp"
                        MouseEnter="BigIcon_MouseEnter"
                        MouseMove="BigIcon_MouseMove"
                        MouseLeave="BigIcon_MouseLeave"/>

                    </Canvas>
                </Grid>
            </Grid>
            <StackPanel Grid.Column="1">
                <GroupBox Header="{DynamicResource m_Tools_SetPadding_MenuItem}" Margin="10" DataContext="{Binding SetPaddings}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="80"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="80"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource m_Left_Header}" Margin="10,5"/>
                        <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding Left,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Margin="10,5" VerticalAlignment="Center"/>
                        <Label Grid.Row="0" Grid.Column="2" Content="{DynamicResource m_Right_Header}" Margin="10,5"/>
                        <TextBox Grid.Row="0" Grid.Column="3" Text="{Binding Right,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Margin="10,5" VerticalAlignment="Center"/>
                        <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource m_Top_Header}" Margin="10,5"/>
                        <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Top,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Margin="10,5" VerticalAlignment="Center"/>
                        <Label Grid.Row="1" Grid.Column="2" Content="{DynamicResource m_Down_Header}" Margin="10,5"/>
                        <TextBox Grid.Row="1" Grid.Column="3" Text="{Binding Bottom,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Margin="10,5" VerticalAlignment="Center"/>
                        <Button 
                        Grid.Row="2" Grid.Column="2" Grid.ColumnSpan="2" 
                        Content="{DynamicResource m_Set_Header}" x:Name="SetPaddingButton"
                        IsEnabled="{Binding UnLockPadding,ElementName=Root}"
                        Click="SetPaddingButton_Click"/>
                    </Grid>
                </GroupBox>
                <GroupBox Header="{DynamicResource m_Tools_ExpandPadding_MenuItem}" Margin="10" DataContext="{Binding ExpandPaddings}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="80"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="80"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource m_Left_Header}" Margin="10,5"/>
                        <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding Left,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Margin="10,5" VerticalAlignment="Center"/>
                        <Label Grid.Row="0" Grid.Column="2" Content="{DynamicResource m_Right_Header}" Margin="10,5"/>
                        <TextBox Grid.Row="0" Grid.Column="3" Text="{Binding Right,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Margin="10,5" VerticalAlignment="Center"/>
                        <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource m_Top_Header}" Margin="10,5"/>
                        <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Top,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Margin="10,5" VerticalAlignment="Center"/>
                        <Label Grid.Row="1" Grid.Column="2" Content="{DynamicResource m_Down_Header}" Margin="10,5"/>
                        <TextBox Grid.Row="1" Grid.Column="3" Text="{Binding Bottom,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Margin="10,5" VerticalAlignment="Center"/>
                        <Button
                        Grid.Row="2" Grid.Column="2" Grid.ColumnSpan="2"
                        Content="{DynamicResource m_Expand_Header}" 
                        IsEnabled="{Binding UnLockPadding,ElementName=Root}"
                        x:Name="ExpandPaddingButton" Click="ExpandPaddingButton_Click"/>
                    </Grid>
                </GroupBox>
                <GroupBox Header="{DynamicResource m_Tools_CutPadding_MenuItem}" Margin="10" DataContext="{Binding CutPaddings}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="80"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="80"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource m_Left_Header}" Margin="10,5"/>
                        <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding Left,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Margin="10,5" VerticalAlignment="Center"/>
                        <Label Grid.Row="0" Grid.Column="2" Content="{DynamicResource m_Right_Header}" Margin="10,5"/>
                        <TextBox Grid.Row="0" Grid.Column="3" Text="{Binding Right,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Margin="10,5" VerticalAlignment="Center"/>
                        <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource m_Top_Header}" Margin="10,5"/>
                        <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Top,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Margin="10,5" VerticalAlignment="Center"/>
                        <Label Grid.Row="1" Grid.Column="2" Content="{DynamicResource m_Down_Header}" Margin="10,5"/>
                        <TextBox Grid.Row="1" Grid.Column="3" Text="{Binding Bottom,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Margin="10,5" VerticalAlignment="Center"/>
                        <Button 
                        Grid.Row="2" Grid.Column="2" Grid.ColumnSpan="2"
                        Content="{DynamicResource m_Cut_Header}" x:Name="CutPaddingButton"
                        IsEnabled="{Binding UnLockPadding,ElementName=Root}"
                        Click="CutPaddingButton_Click"/>
                    </Grid>
                </GroupBox>
            </StackPanel>
        </Grid>
    </Grid>
</mah:MetroWindow>
